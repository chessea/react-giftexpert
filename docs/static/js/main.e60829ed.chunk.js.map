{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MASlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAErB,sBAAKgB,UAAU,0CAAf,UAEI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,EAAL,WCJCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAItB,ECNwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGd,UAIZ,CAACtB,IAIGuB,EDnB2BM,CAAa7B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAWtB,OACI,qCACI,qBAAIJ,UAAU,qCAAd,cAAqDlB,KACrD,mBAAGkB,UAAU,oCAAb,SACKI,GAAW,0CAGhB,qBAAKJ,UAAU,YAAf,SAIQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACQA,GADUA,EAAIC,aE3BjCmB,EAAe,WAIxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmBC,EAAnB,KAUA,OACI,qCAEI,8CACA,cAAC,EAAD,CAAa/C,cAAe+C,IAC5B,uBAEA,6BAEQD,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAyBA,SAAUA,GAArBA,Y,MCrBtCiC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e60829ed.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n    const handeInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(cats => [ inputValue, ...cats]);\n            setinputValue('');\n\n\n        }\n\n\n    }\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handeInputChange}\n            />\n        </form>\n\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n\n}\n","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=AMf7gRh9wfy7zhbOsSWCJnEQ7aJ1eUWp`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    console.log({ id, title, url });\n    return (\n        <div className=\"card animate__animated animate__bounce \">\n\n            <img src={url} alt={title}></img>\n            <p> {title} </p>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifts'\n// import { getGifts } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n    const { data: images, loading } = useFetchGifs(category);\n\n\n\n\n\n\n\n    // getGifts();\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn \"> {category}</h3>\n            <p className=\"animate__animated animate__flash \">\n                {loading && <p>Loading</p>}\n            </p>\n\n            <div className=\"card-grid\">\n\n\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id}\n                            {...img}\n                        ></GifGridItem>\n                    ))\n                }\n\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n\n                setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n\n                }, 3000);\n\n            })\n\n    }, [category])\n\n\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setcategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setcategories([...categories, 'HuanterXHunter']);\n    //     setcategories ( cats => [...cats, 'HunterXHunter']);\n\n\n    // }\n\n\n    return (\n        <>\n\n            <h2>GisExpertApp</h2>\n            <AddCategory setCategories={setcategories} />\n            <hr></hr>\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid key={category}  category={category}></GifGrid>\n                    ))\n\n                }\n            </ol>\n\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}